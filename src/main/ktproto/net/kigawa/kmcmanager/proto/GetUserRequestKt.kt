//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: test.proto

package net.kigawa.kmcmanager.proto;

@kotlin.jvm.JvmName("-initializegetUserRequest")
inline fun getUserRequest(block: net.kigawa.kmcmanager.proto.GetUserRequestKt.Dsl.() -> kotlin.Unit): net.kigawa.kmcmanager.proto.Test.GetUserRequest =
  net.kigawa.kmcmanager.proto.GetUserRequestKt.Dsl._create(net.kigawa.kmcmanager.proto.Test.GetUserRequest.newBuilder()).apply { block() }._build()
object GetUserRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: net.kigawa.kmcmanager.proto.Test.GetUserRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: net.kigawa.kmcmanager.proto.Test.GetUserRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): net.kigawa.kmcmanager.proto.Test.GetUserRequest = _builder.build()

    /**
     * <pre>
     * ユーザーID
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * ユーザーID
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    fun clearId() {
      _builder.clearId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun net.kigawa.kmcmanager.proto.Test.GetUserRequest.copy(block: net.kigawa.kmcmanager.proto.GetUserRequestKt.Dsl.() -> kotlin.Unit): net.kigawa.kmcmanager.proto.Test.GetUserRequest =
  net.kigawa.kmcmanager.proto.GetUserRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

